-- How many movies are in the database ?
SELECT COUNT(*) AS total_movies
FROM movies;

-- What is the average runtime of movies ?
SELECT ROUND(AVG(runtime),2) AS avg_runtime
FROM movies;

-- Which genre has the highest number of movies?
SELECT genre, COUNT(*) AS total
FROM movies
GROUP BY genre
ORDER BY total DESC
LIMIT 1;

--How many customers are there in each country?
SELECT country, COUNT(*) AS total_customers
FROM customers
GROUP BY country
ORDER BY total_customers DESC;

-- What is the percentage of male & female customers?
SELECT gender, ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM customers),2) AS percentage
FROM customers
GROUP BY gender;

-- What is the oldest movie in the database?
SELECT title, year_of_release
FROM movies
ORDER BY year_of_release ASC
LIMIT 1;

-- Who are the top 10 customers with the highest number of rentals?
SELECT c.customer_id, c.name, COUNT(r.renting_id) AS total_rentals
FROM renting AS r
JOIN customers AS c ON r.customer_id = c.customer_id
GROUP BY c.customer_id, c.name
ORDER BY total_rentals DESC
LIMIT 10;

-- What is the average rating of movies for each genre?
SELECT m.genre, ROUND(AVG(r.rating),2) AS avg_rating
FROM renting AS r
JOIN movies AS m ON r.movie_id = m.movie_id
GROUP BY m.genre
ORDER BY avg_rating DESC;

-- Which movies have been rented the most? 
SELECT m.title, COUNT(r.renting_id) AS total_rentals
FROM renting AS r
JOIN movies AS m 
ON r.movie_id = m.movie_id
GROUP BY m.title
ORDER BY total_rentals DESC
LIMIT 10;

-- What is the average age of customers when they created their accounts?
SELECT AVG(EXTRACT(YEAR FROM date_account_start) - EXTRACT(YEAR FROM date_of_birth)) AS avg_start_age
FROM customers;

-- How many movies feature more than 3 actors?
SELECT m.title, COUNT(a.actor_id) AS num_actors
FROM actsin AS ac
JOIN movies AS m 
ON ac.movie_id = m.movie_id
JOIN actors AS a 
ON ac.actor_id = a.actor_id
GROUP BY m.title
HAVING COUNT(a.actor_id) > 3
ORDER BY num_actors DESC;

-- Who are the actors that most frequently appear in top-rated movies?
SELECT a.name, COUNT(*) AS appearances
FROM renting AS r
JOIN movies AS m 
ON r.movie_id = m.movie_id
JOIN actsin AS ac 
ON m.movie_id = ac.movie_id
JOIN actors AS a 
ON ac.actor_id = a.actor_id
WHERE r.rating >= 4
GROUP BY a.name
ORDER BY appearances DESC
LIMIT 10;

-- What is the total revenue generated by each movie ?
SELECT m.title, COUNT(r.renting_id) * m.renting_price AS total_revenue
FROM renting AS r
JOIN movies AS m 
ON r.movie_id = m.movie_id
GROUP BY m.title, m.renting_price
ORDER BY total_revenue DESC;

-- Which country generates the highest revenue from movie rentals?
SELECT c.country, SUM(m.renting_price) AS revenue
FROM renting AS r
JOIN customers AS c 
ON r.customer_id = c.customer_id
JOIN movies AS m 
ON r.movie_id = m.movie_id
GROUP BY c.country
ORDER BY revenue DESC
LIMIT 1;

-- Which customers have not rented any movie in the last 2 years?
SELECT c.customer_id, c.name
FROM customers AS c
LEFT JOIN renting AS r 
ON c.customer_id = r.customer_id
GROUP BY c.customer_id, c.name
HAVING MAX(r.date_renting) < CURRENT_DATE - INTERVAL '2 years';






